#server:
#  port: 8088
spring:
  #  datasource:
  #    #数据源1
  #    db1:
  #      url: jdbc:mysql://localhost:3306/sg_security?characterEncoding=utf-8&serverTimezone=UTC
  #      username: root
  #      password: 123456
  #      driver-class-name: com.mysql.jdbc.Driver
  #      type: com.alibaba.druid.pool.DruidDataSource
  #    #数据源2
  #    db2:
  #      driver-class-name: com.mysql.jdbc.Driver
  #      url: jdbc:mysql://localhost:3306/mytest?characterEncoding=utf-8&serverTimezone=UTC
  #      username: root
  #      password: 123456
  #      type: com.alibaba.druid.pool.DruidDataSource
  #    #quartz数据源
  #    task:
  #      driver-class-name: com.mysql.jdbc.Driver
  #      url: jdbc:mysql://localhost:3306/task?characterEncoding=utf-8&serverTimezone=UTC&useSSL=false
  #      username: root
  #      password: 123456
  #      type: com.alibaba.druid.pool.DruidDataSource
  #使用默认数据源
  quartz:
    properties:
      org:
        quartz:
          scheduler:
            instanceName: DemoScheduler
            instanceId: AUTO
          jobStore:
            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate #跟数据库初始化脚本中配置保持一致
            tablePrefix: QRTZ_
            #true开启集群模式  false 关闭安集群模式
            isClustered: true
            clusterCheckinInterval: 5000
            #建议在Quartz集群中将org.quartz.jobStore.useProperties属性设置为true，将调度程序的配置信息以字符串的方式存储到数据库中，以提高兼容性和可读性。即使在设置为false的情况下，Quartz集群仍然可以正常工作，只是可能会带来一些潜在的问题。
            useProperties: true
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 20
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
    job-store-type: jdbc
    overwrite-existing-jobs: true
    #和scheduler.start()同样
    auto-startup: true


#server:
#  port: 8088
#spring:
#  datasource:
#    #数据源1
#    db1:
#      url: jdbc:mysql://localhost:3306/sg_security?characterEncoding=utf-8&serverTimezone=UTC
#      username: root
#      password: 123456
#      driver-class-name: com.mysql.jdbc.Driver
#      type: com.alibaba.druid.pool.DruidDataSource
#    #数据源2
#    db2:
#      driver-class-name: com.mysql.jdbc.Driver
#      url: jdbc:mysql://localhost:3306/mytest?characterEncoding=utf-8&serverTimezone=UTC
#      username: root
#      password: 123456
#      type: com.alibaba.druid.pool.DruidDataSource
#    #quartz数据源
#    task:
#      driver-class-name: com.mysql.jdbc.Driver
#      url: jdbc:mysql://localhost:3306/task?characterEncoding=utf-8&serverTimezone=UTC&useSSL=false
#      username: root
#      password: 123456
#      type: com.alibaba.druid.pool.DruidDataSource
#  quartz:
#    properties:
#      org:
#        quartz:
#          scheduler:
#            instanceName: DemoScheduler
#            instanceId: AUTO
#          jobStore:
#            class: org.quartz.impl.jdbcjobstore.JobStoreTX
#            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate #跟数据库初始化脚本中配置保持一致
#            tablePrefix: QRTZ_
#            isClustered: true
#            clusterCheckinInterval: 10000
#            useProperties: false
#          threadPool:
#            class: org.quartz.simpl.SimpleThreadPool
#            threadCount: 20
#            threadPriority: 5
#            threadsInheritContextClassLoaderOfInitializingThread: true
#    job-store-type: jdbc
#    overwrite-existing-jobs: true
#    auto-startup: true
#
#mybatis:
#  mapper-locations: classpath:/mapper/*.xml
#  #开启驼峰映射
#  configuration:
#    map-underscore-to-camel-case: true
#spring:
#  quartz:
#  job-store-type: jdbc
#  # 是否等待任务执行完毕后，容器才会关闭
#  wait-for-jobs-to-complete-on-shutdown: true
#  scheduler-name: SpringBootDemoScheduler
#  properties:
#    org:
#      quartz:
#        threadPool:
#          # 线程数量
#          threadCount: 5
#          # 线程优先级
#          threadPriority: 5
#          # 线程池中线程名称的前缀
#          threadNamePrefix: test-thread
#          # 加载任务代码的ClassLoader是否从外部继承
#          threadsInheritContextClassLoaderOfInitializingThread: true
#        jobStore:
#          # 最大能忍受的触发超时时间，如果超时则认为“失误”
#          misfireThreshold: 5000
#          # 选择JDBC的存储方式
#          class: org.quartz.impl.jdbcjobstore.JobStoreTX
#          # 类似于Hibernate的dialect，用于处理DB之间的差异，StdJDBCDelegate能满足大部分的DB（授权）
#          driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#          # 在调度流程的第一步，也就是拉取待即将触发的triggers时，是上锁的状态，即不会同时存在多个线程拉取到相同的trigger的情况，也就避免的重复调度的危险。参考：https://segmentfault.com/a/1190000015492260
#          acquireTriggersWithinLock: true
#

