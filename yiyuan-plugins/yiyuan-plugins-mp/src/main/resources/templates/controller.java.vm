package ${package.Controller};
import ${cfg.apiParent}.${package.ModuleName}.vo.*;
import ${cfg.apiParent}.${package.ModuleName}.dto.*;
import ${package.Entity}.*;
import net.yiyuan.common.model.vo.*;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${table.entityName};
import org.springframework.validation.annotation.Validated;

import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;

import cn.dev33.satoken.annotation.SaCheckLogin;
import cn.dev33.satoken.annotation.SaCheckPermission;
import cn.dev33.satoken.annotation.SaMode;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.context.annotation.Description;

import java.util.List;


#set($modeName = $table.name.toLowerCase().replaceAll(".*_", ""))

#set($modeZhName = $!{table.comment.replaceAll("表", "管理")})
#set($modeZhKongName = ${table.comment.replaceAll("表", "")})
/**
 * $!{table.comment.replaceAll("表", "管理")}
 *
 * @author  ${author}
 * @date ${date}
 *
 * @module $!{cfg.apiMoudel}
 * @folder $!{cfg.apiMoudel}/$!{table.comment.replaceAll("表", "管理")}
 */
@SaCheckLogin
@Slf4j
@RestController
##@RequestMapping("/${table.entityName.substring(1).toLowerCase()}")
##@Api(tags = "$!{table.comment.replaceAll("表", "管理")}" ) //配合swagger使用
##@RequestMapping(value = "/admin")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}):${superControllerClass}()#end
#else
    #if(${superControllerClass})
    public class ${table.controllerName} extends ${superControllerClass}{
    #else
    public class ${table.controllerName} {
    #end
    #set($serviceImplName=$table.serviceName.substring(0,1).toLowerCase()+$table.serviceName.substring(1))
    #set($entityName=$table.entityName.substring(0,1).toLowerCase()+$table.entityName.substring(1))
    ##private static final Logger LOGGER=LoggerFactory.getLogger(${table.controllerName}.class);
@Autowired
private ${table.serviceName} ${serviceImplName};


/**
 * ${table.comment.replaceAll("表", "")}列表(全部)
 *
 * @param request $!{table.comment.replaceAll("表", "")}实体
 * @return {@link CommonResult<List<${table.entityName}QueryVO>>}
 * @author  ${author}
 * @date ${date}
 */
@Description("$!{cfg.apiMoudel}/$!{modeZhName}/查询$!{modeZhKongName}")
@SaCheckPermission(value = {"${package.ModuleName}:${modeName}:query"}, orRole = "admin")
    ##@ApiOperation(value = "$!{table.comment.replaceAll("表", "")}列表(全部)" )
@GetMapping(value = "/${package.ModuleName}/${modeName}/list")
@ResponseBody
public CommonResult<List<${table.entityName}QueryVO>>list( ${table.entityName}ListDTO request)throws Exception{
        return CommonResult.success(${serviceImplName}.list(request),"查询$!{table.comment.replaceAll("表", "")}列表成功");
        }


/**
 * ${table.comment.replaceAll("表", "")}列表(分页)
 *
 * @param request $!{table.comment.replaceAll("表", "")}实体
 * @return {@link CommonResult<Page<${table.entityName}QueryVO>>}
 * @author  ${author}
 * @date ${date}
 */
@Description("$!{cfg.apiMoudel}/$!{modeZhName}/查询$!{modeZhKongName}")
@SaCheckPermission(value = {"${package.ModuleName}:${modeName}:query"}, orRole = "admin")
@GetMapping(value = "/${package.ModuleName}/${modeName}/page")
@ResponseBody
public CommonResult<Page<${table.entityName}QueryVO>>page(
    ${table.entityName}PageDTO request
        )throws Exception{
        return CommonResult.success(${serviceImplName}.page(request),"分页查询$!{table.comment.replaceAll(
        "表", "")}成功");
        }

/**
 * ${table.comment.replaceAll("表", "")}详情
 *
 * @param id $!{table.comment.replaceAll("表", "")}id
 * @return {@link CommonResult<${table.entityName}QueryVO>}
 * @author  ${author}
 * @date ${date}
 */
@Description("$!{cfg.apiMoudel}/$!{modeZhName}/查询$!{modeZhKongName}")
@SaCheckPermission(value = {"${package.ModuleName}:${modeName}:query"}, orRole = "admin")
@GetMapping(value = "/${package.ModuleName}/${modeName}/details/{id}")
@ResponseBody
public CommonResult<${table.entityName}QueryVO> details(@PathVariable("id") @NotBlank String id)throws Exception{
        return CommonResult.success(${serviceImplName}.details(id),"查询$!{table.comment.replaceAll("表", "")}详情成功");
        }


/**
 * 删除${table.comment.replaceAll("表", "")}(支持批量)
 *
 * @param ids $!{table.comment.replaceAll("表", "")}id(多个逗号分割)
 * @return {@link CommonResult<String>}
 * @author  ${author}
 * @date ${date}
 */
@Description("$!{cfg.apiMoudel}/$!{modeZhName}/删除$!{modeZhKongName}")
@SaCheckPermission(value = {"${package.ModuleName}:${modeName}:delete"}, orRole = "admin")
@PostMapping(value = "/${package.ModuleName}/${modeName}/delete")
@ResponseBody
public CommonResult<String> delete(@RequestParam(name = "ids") @Validated({NotBlank.class}) String ids)throws Exception{
        if(${serviceImplName}.delete(ids)){
        return CommonResult.success(null,"删除$!{table.comment.replaceAll("表", "")}成功");
        }else{
        return CommonResult.failed("删除$!{table.comment.replaceAll("表", "")}失败");
        }
        }
/**
 * 编辑$!{table.comment.replaceAll("表", "")}
 *
 * @param request $!{table.comment.replaceAll("表", "")}实体
 * @return {@link CommonResult<String>}
 * @author  ${author}
 * @date ${date}
 */
@Description("$!{cfg.apiMoudel}/$!{modeZhName}/编辑$!{modeZhKongName}")
@SaCheckPermission(value = {"${package.ModuleName}:${modeName}:edit"}, orRole = "admin")
@PostMapping(value = "/${package.ModuleName}/${modeName}/edit")
@ResponseBody
public CommonResult<String> edit(@RequestBody @Validated   ${table.entityName}EditDTO request)throws Exception{
        if(${serviceImplName}.edit(request)){
        return CommonResult.success(null,"修改$!{table.comment.replaceAll("表", "")}成功");
        }else{
        return CommonResult.failed("修改$!{table.comment.replaceAll("表", "")}失败");
        }
        }


/**
 * 新增$!{table.comment.replaceAll("表", "")}
 *
 * @param request $!{table.comment.replaceAll("表", "")}实体
 * @return {@link CommonResult<String>}
 * @author  ${author}
 * @date ${date}
 */
@Description("$!{cfg.apiMoudel}/$!{modeZhName}/新增$!{modeZhKongName}")
@SaCheckPermission(value = {"${package.ModuleName}:${modeName}:add"}, orRole = "admin")
@PostMapping(value = "/${package.ModuleName}/${modeName}/add")
@ResponseBody
public CommonResult<String> add(@RequestBody @Validated  ${table.entityName}AddDTO request)throws Exception{
        if(${serviceImplName}.add(request)){
        return CommonResult.success(null,"新增$!{table.comment.replaceAll("表", "")}成功");
        }else{
        return CommonResult.failed("新增$!{table.comment.replaceAll("表", "")}失败");
        }
        }
        }
#end
